snippet dsc described_class
	described_class
snippet jp JSON parse
	JSON.parse(${0:response.body})
snippet eac extend ActiveSupport::Concern
	extend ActiveSupport::Concern
snippet ise is_expected
	is_expected
snippet head
	let(:headers) { { Authorization: "Bearer #{token}" } }
snippet il bundler/inline
	require 'bundler/inline'

	gemfile(true) do
		ruby '${1:RUBY_VERSION}'
		source 'https://rubygems.org'
	end
snippet ilar bundler/inline with AR
	require 'bundler/inline'

	gemfile(true) do
		ruby '${1:RUBY_VERSION}'
		source 'https://rubygems.org'

		gem 'activerecord', '= 5.1.6.2'
		gem 'mysql2', '= 0.4.9'
	end

	require 'active_record'
	require 'logger'

	ActiveRecord::Base.establish_connection(
		adapter: 'mysql2',
		host: '127.0.0.1',
		port: 3306,
		username: 'root',
		password: 'password',
		database: '${2:}'
	)

	ActiveRecord::Schema.define do
		create_table :${3:model} do |t|
			t.${4:}
		end
	end

	class ${5:} < ActiveRecord::Base
	end
snippet al "stdout query"
	ActiveRecord::Base.logger = Logger.new($stdout)
snippet ibl400 "BadRequest"
	it_behaves_like "400 Bad request"
snippet ibl401 "Unauthorized"
	it_behaves_like "401 Unauthorized"
snippet ibl403 "Forbidden"
	it_behaves_like "403 Forbidden"
snippet ibl404 "Not Found"
	it_behaves_like "404 Not found"
snippet ibl405 "Not Allowed"
	it_behaves_like "405 Not Allowed"
snippet esb
	expect { subject }
snippet toc
	to change { ${1} }
snippet esbc
	expect { subject }.to change { ${1} }
snippet cft
	from(${1}).to(${2})
